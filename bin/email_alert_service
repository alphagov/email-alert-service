#!/usr/bin/env ruby

require_relative "../email_alert_service/environment"
rabbitmq_options = EmailAlertService.config.rabbitmq
logger = EmailAlertService.config.logger

require "connections/amqp_connection"
connection = AMQPConnection.new(rabbitmq_options)
connection.start

require "queues/major_change_queue"
queue_binding = MajorChangeQueue.new(connection).bind

require "models/message_processor"
message_processor = MessageProcessor.new(connection.channel, logger)

require "listeners/listener"
listener = Listener.new(queue_binding, message_processor)

logger.info "Bound to exchange #{connection.exchange_name} on queue #{connection.queue_name}, listening for major changes"

at_exit do
  logger.info "Shutting down.."
  connection.stop
end

begin
  listener.listen
rescue SignalException => e
  logger.info "Received #{e}: exiting"
rescue Exception => e
  Airbrake.notify_or_ignore(e)
  raise e
end
